SpringMVC
  Front-Contriller 패텅을 이용 : 모든 흐름의 사전/사후 처리 가능 (@Controller)
  어노테이션 활용하여 최소한의 코드로 많은 처리 가능
  HttpServletRequest/HttpServletRespones를 이용하지 않아도 될 만큼 추상화된 방식으로 개발
  
DispatcherServlet과 Front Controller
 스프링 MVC에서 모든 요청이 DispatcherServlet를 통해 실행 ->Front Controller 패턴을 이용하면 Front Controller에서 공통저리 처리 가능(DispatcherServlet가 Front Controller역할 )

webapp -> resources 폴더 생성
WEB-INF -> servlet-context.xml 작성
          <?xml version="1.0" encoding="UTF-8"?>
          <beans xmlns="http://www.springframework.org/schema/beans"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
                 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
                  
              <mvc:annotation-driven></mvc:annotation-driven>
              //mvc:resources : 이미지나 html파일 같은 정적인 파일 경로 지정
              <mvc:resources mapping="/resources/**" location="/resources"></mvc:resources>
              <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                  <property name="prefix" value="/WEB-INF/views/"></property>
                  <property name="suffix" value=".jsp"></property>
              </bean>        
          </beans>
        
        web.xml : DispatcherServlet 설정 
            <?xml version="1.0" encoding="UTF-8"?>
        <web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
                 version="4.0">
        
            <context-param>
                <param-name>contextConfigLocation</param-name>
                <param-value>/WEB-INF/root-context.xml</param-value>
            </context-param>
            
            <listener>
                <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
            </listener>
        
            <servlet>
                <servlet-name>appServlet</servlet-name>
                <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class
                    <init-param>
                        <param-name>contextConfigLocation</param-name>
                          //디스패쳐서블릿이 로딩할때, 서블렛-컨텍스트 이용
                        <param-value>/WEB-INF/servlet-context.xml</param-value>
                    </init-param>
                      //톰캣 로딩 시에 클래스를 미리 로딩
                    <load-on-startup>1</load-on-startup>
            </servlet>
        
            <servlet-mapping>
                <servlet-name>appServlet</servlet-name>
                <url-pattern>/</url-pattern>
            </servlet-mapping>
        </web-app>

controller 패키지 -> SampleCotroller 클래스
   //스프링 MVC에서 컨트롤러 역할
  @Controller
  @Log4j2
  public class SampleController {
      //GET방식으로 들어오는 요청을 처리
      @GetMapping("/hello")
      public void hello(){
          log.info("hello.....");
      }
  }

서블릿-컨텍스트.xml 코드 추가
    <context:component-scan base-package="org.zerock.springex.controller"/>
    WEB-INF/views/ hello.jsp 작성
      <%@ page contentType="text/html;charset=UTF-8" language="java" %>
    <html>
    <head>
        <title>Title</title>
    </head>
    <body>
        <h1>Hello JSP</h1>
    </body>
    </html>

@RequestMapping : 특정한 경로의 요청
TodoController 작성
      @Controller
      @RequestMapping("/todo")
      @Log4j2
      public class TodoController {
      
          @RequestMapping("/list")
          public void list(){
              log.info("todo list......");
          }
          //@RequestMapping(value = "/register", method = RequestMethod.GET)
          @GetMapping("/register")
          public void registerGET(){
              log.info("GET todo register......");
          }
          
          @PostMapping("/register")
          public void registerPost(){
              log.info("POST todo register......");
          }
      }
