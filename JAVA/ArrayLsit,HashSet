
HashSet과 ArrayList은 Java에서 데이터를 저장하고 관리하는 데 사용되는 두 가지 다른 컬렉션 클래스입니다.

데이터 저장 방식:
ArrayList: 동적 배열을 기반으로 한 리스트입니다. 원소들은 인덱스를 가지고 있으며, 순차적으로 저장됩니다.
        ArrayList<String> list = new ArrayList<>();
HashSet: 해시 테이블을 기반으로 한 집합(Set)입니다. 중복된 원소를 허용하지 않으며, 원소들 간에 순서가 정의되어 있지 않습니다.
   HashSet<String> completionSet = new HashSet<>();
           for (String c : completion) {
            completionSet.add(c);
        }

중복된 원소:
ArrayList: 중복된 원소를 허용합니다.
HashSet: 중복된 원소를 허용하지 않습니다. 동일한 원소를 여러 번 추가해도 한 번만 저장됩니다.
검색 및 제거 시간 복잡도:

ArrayList: 인덱스를 이용한 검색 및 제거는 O(1)입니다. 그러나 원소를 찾아서 제거할 때에는 원소의 위치를 찾는데 O(n)의 시간이 소요됩니다.
HashSet: 해시 테이블을 사용하므로 검색 및 제거는 평균적으로 O(1)입니다. 최악의 경우에도 O(n)이 될 수 있지만, 보통은 상수 시간에 가깝습니다.
순서:

ArrayList: 원소의 순서가 유지됩니다.
HashSet: 원소의 순서가 유지되지 않습니다.
따라서, 문제에 따라 선택해야 하는데, 중복된 원소를 허용하지 않고 순서가 중요하지 않은 경우에는 HashSet을 사용하는 것이 효율적일 수 있습니다. 위의 코드에서는 참가자 목록에서 완주자를 효율적으로 제거하기 위해 HashSet을 사용하였습니다.
